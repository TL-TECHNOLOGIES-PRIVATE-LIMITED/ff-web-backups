"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var EventEmitter = /*#__PURE__*/function () {
  function EventEmitter() {
    (0, _classCallCheck2["default"])(this, EventEmitter);
    this.listeners = {};
  }

  (0, _createClass2["default"])(EventEmitter, [{
    key: "emit",
    value: function emit(eventName) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var listeners = this.listeners[eventName];

      if (!listeners) {
        return false;
      }

      listeners.forEach(function (listener) {
        return listener.apply(void 0, args);
      });
      return true;
    }
  }, {
    key: "addListener",
    value: function addListener(eventName, handler) {
      this.listeners[eventName] = this.listeners[eventName] || [];
      this.listeners[eventName].push(handler);
      return this;
    }
  }, {
    key: "on",
    value: function on(eventName, handler) {
      return this.addListener(eventName, handler);
    }
  }, {
    key: "removeListener",
    value: function removeListener(eventName, handler) {
      var listeners = this.listeners[eventName];

      if (!listeners) {
        return this;
      }

      for (var index = 0; index < listeners.length; index++) {
        if (listeners[index] === handler) {
          listeners.splice(index, 1);
          break;
        }
      }

      return this;
    }
  }, {
    key: "off",
    value: function off(eventName, handler) {
      return this.removeListener(eventName, handler);
    }
  }]);
  return EventEmitter;
}();

exports["default"] = EventEmitter;